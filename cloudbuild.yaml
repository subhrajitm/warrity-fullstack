steps:
  # Debug: Print current directory and files
  - name: 'ubuntu'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Current directory: $(pwd)"
        echo "Files in directory:"
        ls -la

  # Install pnpm
  - name: 'node:18-alpine'
    entrypoint: npm
    args: ['install', '-g', 'pnpm']
    id: 'install-pnpm'

  # Debug: Verify pnpm installation
  - name: 'node:18-alpine'
    entrypoint: pnpm
    args: ['--version']
    id: 'verify-pnpm'

  # Copy package files
  - name: 'ubuntu'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Copying package files..."
        cp package*.json pnpm-lock.yaml /workspace/
    id: 'copy-files'

  # Install dependencies
  - name: 'node:18-alpine'
    entrypoint: pnpm
    args: ['install', '--frozen-lockfile']
    id: 'install-deps'
    env:
      - 'NODE_ENV=production'

  # Build the application
  - name: 'node:18-alpine'
    entrypoint: pnpm
    args: ['run', 'build']
    id: 'build-app'
    env:
      - 'NODE_ENV=production'

  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}:${COMMIT_SHA}', '.']
    id: 'build-image'

  # Push the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}:${COMMIT_SHA}']
    id: 'push-image'

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image'
      - '${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}:${COMMIT_SHA}'
      - '--region'
      - '${_DEPLOY_REGION}'
      - '--platform'
      - '${_PLATFORM}'
      - '--allow-unauthenticated'
    id: 'deploy'

images:
  - '${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}:${COMMIT_SHA}'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'  # Use a more powerful machine for faster builds

timeout: '1800s'  # 30 minutes

substitutions:
  _NODE_VERSION: '18'
  _REGION: 'asia-south1'
  _SERVICE_NAME: 'warrity-web'
  _AR_PROJECT_ID: 'warrity-460718'
  _AR_REPOSITORY: 'cloud-run-source-deploy'
  _AR_HOSTNAME: 'asia-south1-docker.pkg.dev'
  _DEPLOY_REGION: 'asia-south1'
  _PLATFORM: 'managed' 